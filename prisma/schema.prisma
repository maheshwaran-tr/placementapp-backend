// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//generator client {
//  provider = "prisma-client-js"
//}

//datasource db {
//  provider = "postgresql"
//  url      = env("DATABASE_URL") // Update with your database connection string
//}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

        
model Department {
  dept_id      Int        @id @default(autoincrement())
  name         String     @db.VarChar(5)
  description  String?    @db.VarChar(100)
  students     Student[]
  staff        Staff[]
}

model Status {
  status_id    Int        @id @default(autoincrement())
  status       String     @db.VarChar(5)
  description  String?    @db.VarChar(100)
  applications Application[]
}

model User {
  user_id      Int        @id @default(autoincrement())
  username     String     @unique
  email        String     @unique @db.VarChar(100)
  password     String
  role         UserRole
  created_at   DateTime   @default(now())
  student      Student?
  staff        Staff?
  admin        Admin?
}

enum UserRole {
  student
  staff
  admin
}

model Student {
  student_id      Int       @id @default(autoincrement())
  user_id         Int       @unique
  rollno          String?   @db.VarChar(10)
  regno           String?   @db.VarChar(20)
  name            String    @db.VarChar(100)
  dept_id         Int
  gender          String?   @db.VarChar(6)
  father_name     String?   @db.VarChar(100)
  dob             String?   @db.VarChar(20)
  score_10th      Int?
  board_10th      String?   @db.VarChar(20)
  yop_10th        Int?
  score_12th      Int?
  board_12th      String?   @db.VarChar(20)
  yop_12th        Int?
  score_diploma   Int?
  branch_diploma  String?   @db.VarChar(10)
  yop_diploma     Int?
  cgpa            Float?
  phone_number    String?   @db.VarChar(15)
  email           String?   @db.VarChar(100)
  placement_willing String? @db.VarChar(50)
  profile_url     String?
  resume_url      String?
  created_at      DateTime  @default(now())
  applications    Application[]
  department      Department @relation(fields: [dept_id], references: [dept_id])
  user            User       @relation(fields: [user_id], references: [user_id])
}

model Staff {
  staff_id       Int        @id @default(autoincrement())
  user_id        Int        @unique
  staff_rollno   String?    @db.VarChar(10)
  dept_id        Int
  phone_number   String?    @db.VarChar(15)
  email          String?    @db.VarChar(100)
  profile_url    String?
  created_at     DateTime   @default(now())
  department     Department @relation(fields: [dept_id], references: [dept_id])
  user           User       @relation(fields: [user_id], references: [user_id])
}

model Admin {
  admin_id       Int        @id @default(autoincrement())
  admin_rollno   String?    @db.VarChar(10)
  name           String?    @db.VarChar(100)
  user_id        Int        @unique
  phone_number   String?    @db.VarChar(15)
  email          String?    @db.VarChar(100)
  profile_url    String?
  created_at     DateTime   @default(now())
  user           User       @relation(fields: [user_id], references: [user_id])
}

model Company {
  company_id     Int        @id @default(autoincrement())
  company_name   String     @db.VarChar(50)
  logo_url       String?
  created_at     DateTime   @default(now())
  drives         Drive[]
}

model Drive {
  drive_id           Int        @id @default(autoincrement())
  company_id         Int
  job_role           String     @db.VarChar(50)
  location           String?    @db.VarChar(30)
  description        String?    @db.VarChar(100)
  salary             String?    @db.VarChar(10)
  training_period    String?    @db.VarChar(40)
  training_stipend   String?    @db.VarChar(10)
  drive_date         DateTime?
  drive_time         String?    @db.VarChar(20)
  eligible_10th_mark Int?
  eligible_12th_mark Int?
  eligible_cgpa      Float?
  eligible_history_of_arrears Int?
  eligible_current_arrears Int?
  mode               String?
  venue              String?
  job_type           String?
  required_skills    String[]
  created_at         DateTime   @default(now())
  company            Company    @relation(fields: [company_id], references: [company_id])
  applications       Application[]
}

model Application {
  application_id Int        @id @default(autoincrement())
  student_id     Int
  drive_id       Int
  status_id      Int
  proof_url         String?
  created_at     DateTime   @default(now())
  student        Student    @relation(fields: [student_id], references: [student_id])
  drive          Drive      @relation(fields: [drive_id], references: [drive_id])
  status         Status     @relation(fields: [status_id], references: [status_id])
}